{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace DataScope.Select.Api.Authentication",
    "description": "This OData service is located at http://localhost",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/RequestToken": {
      "post": {
        "tags": [
          "RequestToken"
        ],
        "summary": "Invoke actionImport RequestToken",
        "description": "Returns an authentication token that must be applied to all requests.",
        "operationId": "ActionImport.RequestToken",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Credentials": {
                    "nullable": true,
                    "$ref": "#/components/schemas/DataScope.Select.Api.Authentication.Credentials"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "actionImport"
      }
    },
    "/ValidateToken(Token={Token})": {
      "get": {
        "tags": [
          "ValidateToken"
        ],
        "summary": "Invoke functionImport ValidateToken",
        "description": "This method is deprecated.  Please do not use.  It will be removed at some point in the future. When using the toolkit, use the token to create a context.  There are parameters on the context to handle an invalid token. When you are using the REST API without the toolkit, pass the token on the request header.  If it is invalid, you will receive an authorization error.  At this point you can call the RequestToken method to retrieve a new token and try the request again.",
        "operationId": "FunctionImport.ValidateToken",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/DataScope.Select.Api.Authentication.ValidateTokenResult"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "functionImport"
      }
    }
  },
  "components": {
    "schemas": {
      "DataScope.Select.Api.Authentication.Credentials": {
        "title": "Credentials",
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Credentials for authentication."
      },
      "DataScope.Select.Api.Authentication.ValidateTokenResult": {
        "title": "ValidateTokenResult",
        "type": "object",
        "properties": {
          "IsValid": {
            "type": "boolean"
          },
          "Expires": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "DataScope.Select.Api.Authentication.Credentials": {
        "value": {
          "Password": "String",
          "Username": "String"
        }
      },
      "DataScope.Select.Api.Authentication.ValidateTokenResult": {
        "value": {
          "Expires": "0001-01-01T01:00:00+01:00",
          "IsValid": true
        }
      }
    }
  },
  "tags": [
    {
      "name": "RequestToken",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "ValidateToken",
      "x-ms-docs-toc-type": "container"
    }
  ]
}